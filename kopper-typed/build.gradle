apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'signing'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

dependencies {
    compile project(':kopper')
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.

    testCompile 'org.testng:testng:6.8.1',
            "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
}

test {
    useTestNG()
    testLogging {
        // showStandardStreams = true
        exceptionFormat "short"
        events "PASSED", "FAILED", "SKIPPED"

        debug {
            events "STARTED", "FAILED", "SKIPPED"
            exceptionFormat "full"
        }
    }
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

task sourcesJar(type: Jar) {
    from project.sourceSets.main.allSource
    classifier "sources"
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourcesJar
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Kopper'
                packaging 'jar'
                description 'Kotlin option parser'
                url 'https://github.com/jimschubert/kopper'

                scm {
                    connection 'git@github.com:jimschubert/kopper.git'
                    developerConnection 'scm:git:git@github.com:jimschubert/kopper.git'
                    url 'https://github.com/jimschubert/kopper'
                }

                licenses {
                    license {
                        name 'MIT'
                        url 'https://github.com/jimschubert/kopper/blob/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'jimschubert'
                        name 'Jim Schubert'
                        email 'james.schubert@gmail.com'
                    }
                }
            }
        }
    }
}
